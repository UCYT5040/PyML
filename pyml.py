import uuid
class BaseComponent:
  def __init__(self):
    self.html = ""
    self.location = "body"
  def generate_raw_html(self):
    return self.html
class CustomCompenent(BaseComponent):
  def __init__(self, html:str, location:str='body', id:str=None):
    self.html = html
    self.location = location
    if not id: self.id = uuid.uuid4().hex
  def set_location(self, location):
    self.location = location
class Header(BaseComponent):
  def __init__(self, level:int, content:str):
    self.html = f'<h{level}>{content}</h{level}>'
class Page:
  def __init__(self, title:str):
    self.title = title
    self.style = "/* Generated By PYML */"
    self.external_styles = []
    self.components = []
  def set_title(self, title:str):
    self.title = title
  def set_style(self, css:str):
    self.style = css
  def get_style(self):
    return self.style
  def add_external_style(self, link:str):
    self.external_styles.append(link)
  def generate_raw_external_styles(self):
    output = ""
    for i in self.external_styles:
      output += f'<link rel="stylesheet" src="{i}" />'
    return output
  def add_component(self, component:BaseComponent):
    self.components.append(component)
  def add_components(self, components:list):
    for i in components:
      self.components.append(i)
  def generate_raw_components(self, filter=None):
    output = ""
    if not filter:
      for i in self.components:
        output += f'<div id="{i.id}">{i.generate_raw_html()}</div>'
    else:
      for i in self.components:
        if i.location == filter:
          output += f'<div id="{i.id}">{i.generate_raw_html()}</div>'
    return output
  def generate_raw_html(self):
    return f'''
<!doctype HTML>
<!-- Generated By PYML -->
<html>
  <head>
    <title>{self.title}</title>
    <style>{self.style}</style>
    {self.generate_raw_external_styles()}
    {self.generate_raw_components("head")}
  </head>
  <body>
{self.generate_raw_components("body")}
  </body>
</html>
'''